import textwrap


def menu():
    return input(
        textwrap.dedent(
            """\
        ================ MENU ================
        [d] Depositar
        [s] Sacar
        [e] Extrato
        [nc] Nova conta
        [lc] Listar contas
        [nu] Novo usuário
        [q] Sair
        => """
        )
    )


def depositar(saldo, valor, extrato):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito:\tR$ {valor:.2f}\n"
        print("\n=== Depósito realizado com sucesso. ===")
    else:
        print("\nOperação falhou. Valor inválido.")
    return saldo, extrato


def sacar(saldo, valor, extrato, limite, numero_saques, limite_saques):
    if valor <= 0:
        print("\nOperação falhou! Valor inválido.")
    elif valor > saldo:
        print("\nOperação falhou. Saldo insuficiente.")
    elif valor > limite:
        print("\nOperação falhou. Saque excede o limite.")
    elif numero_saques >= limite_saques:
        print("\nOperação falhou. Número máximo de saques excedido.")
    else:
        saldo -= valor
        extrato += f"Saque:\t\tR$ {valor:.2f}\n"
        print("\n=== Saque realizado com sucesso! ===")
        numero_saques += 1
    return saldo, extrato


def exibir_extrato(saldo, extrato):
    print("\n================ EXTRATO ================")
    print(extrato if extrato else "Não foram realizadas movimentações.")
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("===========================================")


def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    if any(u["cpf"] == cpf for u in usuarios):
        print("\nJá existe usuário com esse CPF!")
        return
    usuario = {
        "nome": input("Informe o nome completo: "),
        "data_nascimento": input("Informe a data de nascimento (dd-mm-aaaa): "),
        "cpf": cpf,
        "endereco": input("Informe o endereço: "),
    }
    usuarios.append(usuario)
    print("=== Usuário criado com sucesso! ===")


def filtrar_usuario(cpf, usuarios):
    return next((u for u in usuarios if u["cpf"] == cpf), None)


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print("\n=== Conta criada com sucesso! ===")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}
    print("\nUsuário não encontrado!")


def listar_contas(contas):
    for conta in contas:
        print(
            textwrap.dedent(
                f"""\n
            {'=' * 100}
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
            )
        )


def main():
    LIMITE_SAQUES, AGENCIA, saldo, limite, extrato, numero_saques, usuarios, contas = (
        3,
        "0001",
        0,
        500,
        "",
        0,
        [],
        [],
    )

    while True:
        opcao = menu()
        if opcao == "d":
            saldo, extrato = depositar(
                saldo, float(input("Informe o valor do depósito: ")), extrato
            )
        elif opcao == "s":
            saldo, extrato = sacar(
                saldo,
                float(input("Informe o valor do saque: ")),
                extrato,
                limite,
                numero_saques,
                LIMITE_SAQUES,
            )
        elif opcao == "e":
            exibir_extrato(saldo, extrato)
        elif opcao == "nu":
            criar_usuario(usuarios)
        elif opcao == "nc":
            conta = criar_conta(AGENCIA, len(contas) + 1, usuarios)
            if conta:
                contas.append(conta)
        elif opcao == "lc":
            listar_contas(contas)
        elif opcao == "q":
            break
        else:
            print("Operação inválida, selecione novamente.")


main()
